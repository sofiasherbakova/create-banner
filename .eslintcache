[{"/Users/ffood/banners/src/index.js":"1","/Users/ffood/banners/src/App.js":"2","/Users/ffood/banners/src/components/CreateImg.jsx":"3","/Users/ffood/banners/src/components/GetParameters.jsx":"4","/Users/ffood/banners/src/reportWebVitals.js":"5"},{"size":335,"mtime":1606829454000,"results":"6","hashOfConfig":"7"},{"size":395,"mtime":1606922045000,"results":"8","hashOfConfig":"7"},{"size":626,"mtime":1606919202000,"results":"9","hashOfConfig":"7"},{"size":2642,"mtime":1606922034000,"results":"10","hashOfConfig":"7"},{"size":362,"mtime":1606669453000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"pafwns",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ffood/banners/src/index.js",[],["24","25"],"/Users/ffood/banners/src/App.js",["26","27","28"],"/Users/ffood/banners/src/components/CreateImg.jsx",["29"],"/Users/ffood/banners/src/components/GetParameters.jsx",["30"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { Row, Col, Button, Form, Input, Card, CardBody, CardTitle} from 'reactstrap';\n\nconst Canvas = (props) => {\n  \n  const canvasRef = useRef(null);\n  console.log(props.data);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    context.fillStyle = props.data.color;\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n  }, []);\n  return(\n    <canvas className=\"canva\" width={350} height={450} ref={canvasRef} {...props}/>\n  );\n}\n\nconst GetParameters = () => {\n    const [type, setType] = useState(\"color\");\n    const [color, setColor] = useState(\"#000000\");\n    const [text, setText] = useState(\"\");\n    const [img, setImage] = useState(\"\");\n    let data = {\n      type : type,\n      color : color,\n      text : text,\n      img : img\n    }\n\n    const getData = () => {\n      \n      /*data = {\n        type : type,\n        color : color,\n        text : text,\n        img : img\n      }\n      let json = JSON.stringify(data);*/\n      //console.log(json);\n    }\n\n    return (\n      <Row>\n        <Col md={6} className=\"m-auto\">\n            <Card className=\"mb-4 shadow-sm\">\n                <CardBody>\n                  <Form>\n                    <CardTitle className=\"options\" tag=\"h5\">1. Выбери заливку</CardTitle>\n                    <Row>\n                      <Col>\n                        <Input type=\"select\" name=\"select\" onChange={e => setType(e.target.value)}>\n                          <option value=\"color\">Сплошной цвет</option>\n                          <option value=\"gradient\">Градиент</option>\n                        </Input>\n                      </Col>\n                      <Col><Input type=\"color\" value={color} onChange={e => setColor(e.target.value)}/></Col>\n                    </Row>\n                    <CardTitle className=\"options\" tag=\"h5\">2. Добавь изображение (ссылка или DataURI)</CardTitle>\n                    <Input type=\"text\" value={img} onChange={e => setImage(e.target.value)}/>\n                    <CardTitle className=\"options\" tag=\"h5\">3. Добавь текст</CardTitle>\n                    <Input type=\"text\" value={text} onChange={e => setText(e.target.value)}/>\n                    <Button className=\"options\" onClick={getData} color=\"danger\">Создать!</Button>\n                  </Form>\n                </CardBody>\n            </Card>\n        </Col>\n        <Col md={6} className=\"m-auto\">\n            <Canvas data={data}/>\n        </Col>\n      </Row>\n    );\n}\n\nexport default GetParameters;","/Users/ffood/banners/src/reportWebVitals.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":3,"column":8,"nodeType":"37","messageId":"38","endLine":3,"endColumn":17},{"ruleId":"35","severity":1,"message":"39","line":4,"column":17,"nodeType":"37","messageId":"38","endLine":4,"endColumn":25},{"ruleId":"35","severity":1,"message":"40","line":5,"column":10,"nodeType":"37","messageId":"38","endLine":5,"endColumn":13},{"ruleId":"35","severity":1,"message":"40","line":2,"column":10,"nodeType":"37","messageId":"38","endLine":2,"endColumn":13},{"ruleId":"41","severity":1,"message":"42","line":14,"column":6,"nodeType":"43","endLine":14,"endColumn":8,"suggestions":"44"},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'CreateImg' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Row' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.data.color'. Either include it or remove the dependency array.","ArrayExpression",["47"],"no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [props.data.color]",{"range":"50","text":"51"},[463,465],"[props.data.color]"]