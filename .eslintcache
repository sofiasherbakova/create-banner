[{"/Users/ffood/banners/src/components/GetParameters.jsx":"1","/Users/ffood/banners/src/App.js":"2","/Users/ffood/banners/src/components/CreateImg.jsx":"3","/Users/ffood/banners/src/index.js":"4"},{"size":3636,"mtime":1607367391000,"results":"5","hashOfConfig":"6"},{"size":396,"mtime":1607094293000,"results":"7","hashOfConfig":"6"},{"size":626,"mtime":1606919202000,"results":"8","hashOfConfig":"6"},{"size":335,"mtime":1606829454000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"mq8sg4",{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ffood/banners/src/components/GetParameters.jsx",["19","20"],"/Users/ffood/banners/src/App.js",["21","22","23"],"/Users/ffood/banners/src/components/CreateImg.jsx",["24"],"import React, { useEffect, useRef } from \"react\";\nimport { Row, Col} from 'reactstrap';\n\n\nconst Canvas = (props) => {\n  \n  const canvasRef = useRef(null);\n  \n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    context.fillStyle = '#000000';\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n  }, []);\n  return(\n    <canvas className=\"canva\" width={350} height={450} ref={canvasRef} {...props}/>\n  );\n}\n\nconst CreateImg = () => {\n    return (\n      <Col md={6} className=\"m-auto\">\n        <Canvas/>\n      </Col>\n    );\n}\n\nexport default CreateImg;\n","/Users/ffood/banners/src/index.js",[],{"ruleId":"25","severity":1,"message":"26","line":1,"column":36,"nodeType":"27","messageId":"28","endLine":1,"endColumn":45},{"ruleId":"29","severity":1,"message":"30","line":25,"column":7,"nodeType":"31","endLine":25,"endColumn":57},{"ruleId":"25","severity":1,"message":"32","line":3,"column":8,"nodeType":"27","messageId":"28","endLine":3,"endColumn":17},{"ruleId":"25","severity":1,"message":"33","line":4,"column":17,"nodeType":"27","messageId":"28","endLine":4,"endColumn":25},{"ruleId":"25","severity":1,"message":"34","line":5,"column":10,"nodeType":"27","messageId":"28","endLine":5,"endColumn":13},{"ruleId":"25","severity":1,"message":"34","line":2,"column":10,"nodeType":"27","messageId":"28","endLine":2,"endColumn":13},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'CreateImg' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used."]